<?xml version="1.0" encoding="utf-8"?>
<ModMetaData>
	<name>Math!</name>
	<author>CrunchyDuck</author>
	<supportedVersions>
		<li>1.3</li>
		<li>1.4</li>
	</supportedVersions>
	<packageId>CrunchyDuck.Math</packageId>
	<description>[b]Math![/b] Allows you to perform math in input fields for crafting bills, and use handy variables related to your colony.

[h2]Why would I use [b]Math![/b]?[/h2]
A lot of bills are made to fit your colony's situation - Each colonist eats 2 meals a day, we want 3 days of food, so [u]2 * 3 * colonists[/u]. We want [u]colonists[/u] number of t-shirts and hats and bionic hearts. [b]Math![/b] gives you variables and equations supported by a [url=https://github.com/ncalc/ncalc]powerful math library.[/url] [b]Math![/b] will remember these equations and update bills once an hour to adapt to any changes in their variables, automating much of the work required to maintain recipes.

[h2]How do I use [b]Math![/b]?[/h2]
Type it in!!
[img]https://raw.githubusercontent.com/CrunchyDuck/Math/master/About/typed_in_math.png[/img]
It can evaluate if statements, perform trigonometry, and so much more! Heck, I don't know all the things [b]Math![/b] can do! Take a look at NCalc's [url=https://github.com/ncalc/ncalc/wiki/Functions]functions[/url] and [url=https://github.com/ncalc/ncalc/wiki/Operators]operators[/url] to see what you can do!
The text field has been expanded to make room for large calculations! (Mod option to change how much it's expanded coming soon)

[h2]Variables[/h2]
I've defined a few variables you'll want to use. All variables are [b]based on the map that the bill is contained in[/b]. So, if you have 4 colonists total but only 2 in the bill's map, [u]col[/u] will equal 2. This lets it work on multiple maps, and means people in caravans and the like won't be included in recipes.

[b]Pawn variables[/b]
[u]pawns[/u] or [u]pwn[/u] - All owned pawns (prisoners, slaves, colonists.) Doesn't include, say, passer-bys.
[u]colonists[/u] or [u]col[/u] - How many colonists (Not slaves or prisoners)
[u]prisoners[/u] or [u]pri[/u] - How many prisoners
[u]slaves[/u] or [u]slv[/u] - How many slaves
[u]animals[/u] or [u]anim[/u] - How many animals.

Each of the above also have an intake variable, that allows you to calculate based on their cumulative food consumed per day:
[u]anim_in[/u] or [u]animals_intake[/u] - Total intake of all animals per day.
[u]pwn_in[/u] or [u]pawns_intake[/u] - Total intake of all pawns per day.
etc.

[b]ThingDef searching[/b]
You can search for the count of [u]any[/u] ThingDef (items, ostriches, doors, rocks...) on the map. Anything that is forbidden will not be counted.
You'll need to convert the name of that thing into a valid parameter, which is simple to do!
First, if it's a crafted/built item, ignore the material/quality of the item. For stacks, ignore the quantity.
Then, make it all lowercase.
Finally, replace spaces with underscores.

Let's look at some examples:
Compacted steel -> [u]compacted_steel[/u]
Medicine x5 -> [u]medicine[/u]
Plasteel flak helmet (excellent) -> [u]flak_helmet[/u]

[h2]Compatibility[/h2]
Goodness I don't know. I haven't tested it with any mods that I don't use, and I don't use any UI mods. If it doesn't work with a mod you like, let me know and I'll look into it.

[h3]Future plans[/h3]
I'd like to do these things in the future, but right now I don't know if they're important enough to do yet. If you really would like something, lemme know and it'll make me more likely to pursue it.
Make the text field red if an equation is invalid.
Add an in-game area that shows a list of variables you can use (but im not sure where to put it).
Expand equation field.

[b]Links:[/b]
Github: https://github.com/CrunchyDuck/Math
NCalc: https://github.com/ncalc/ncalc
donate: I will keep doing what I do regardless of income. https://ko-fi.com/crunchyduck

[img]https://raw.githubusercontent.com/CrunchyDuck/Math/master/About/licence_image.png[/img]</description>
	<modDependencies>
		<li>
			<packageId>brrainz.harmony</packageId>
			<displayName>Harmony</displayName>
			<steamWorkshopUrl>steam://url/CommunityFilePage/2009463077</steamWorkshopUrl>
			<downloadUrl>https://github.com/pardeike/HarmonyRimWorld/releases/latest</downloadUrl>
		</li>
	</modDependencies>
	<loadAfter>
		<li>Ludeon.RimWorld</li>
		<li>brrainz.harmony</li>
	</loadAfter>
</ModMetaData>
