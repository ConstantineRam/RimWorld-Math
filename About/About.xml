<?xml version="1.0" encoding="utf-8"?>
<ModMetaData>
	<name>Math!</name>
	<author>CrunchyDuck</author>
	<supportedVersions>
		<li>1.3</li>
		<li>1.4</li>
	</supportedVersions>
	<packageId>CrunchyDuck.Math</packageId>
	<description>[b]Math![/b] improves the bill UI, allows you to perform math in input fields, and use handy variables related to your colony.

[h2]Why would I use [b]Math![/b]?[/h2]
A lot of bills are made to fit your colony's situation - Each colonist intakes col_in amount of nutrition, a meal is about 1 nutrition and we want 5 days of food. So our bill should be "colonists intake" * 5. Or maybe you don't want to count [i]just[/i] simple meals, but all meals. [b]Math![/b] improves the user interface for bills, and gives you variables and equations supported by a [url=https://github.com/ncalc/ncalc]powerful math library.[/url] [b]Math![/b] will remember these equations and update bills once an hour to adapt to any changes in their variables, automating much of the work required to maintain recipes.

[h2]How do I use [b]Math![/b]?[/h2]
Type it in!!
[img]https://steamuserimages-a.akamaihd.net/ugc/1853820727236000569/A63D104F2ED5666712E69A8E472CC76434919605/?imw=637&#038;imh=358&#038;ima=fit[/img]
It can evaluate if statements, perform trigonometry, and so much more! Heck, I don't know all the things [b]Math![/b] can do! Take a look at NCalc's [url=https://github.com/ncalc/ncalc/wiki/Functions]functions[/url] and [url=https://github.com/ncalc/ncalc/wiki/Operators]operators[/url] to see what you can do!

[h2]Variables[/h2]
I've defined a few variables you'll want to use, and they can all be seen from the handy-dandy in-bill info card.
[img]https://raw.githubusercontent.com/CrunchyDuck/Math/master/About/infocard.png[/img]
All variables are [b]based on the map that the bill is contained in[/b]. So, if you have 4 colonists total but only 2 in the bill's map, "col" will equal 2. This lets it work on multiple maps, and means people in caravans and the like won't be included in recipes. Forbidden items also aren't counted.
Some of the most useful variables are...

"pawns" or "pwn" - All owned pawns (prisoners, slaves, colonists.) Doesn't include, say, passer-bys.
"mechanitors" or "mech" - Number of mechanitors. Does not include slave or prisoner mechanitors.
"colonists" or "col" - How many colonists (Not slaves or prisoners)
"prisoners" or "pri" - How many prisoners
"slaves" or "slv" - How many slaves
"animals" or "anim" - How many animals.
"babies" or "bab" - How many babies.

"mechanitors bandwidth" or "mech ban" - Amount of free mechanitor bandwidth.

Each of the above also have an intake variable, that allows you to calculate based on their cumulative food consumed per day:
"anim in" or "animals intake" - Total intake of all animals per day.
"pwn in" or "pawns intake" - Total intake of all pawns per day.
etc.

[b]Thing searching[/b]
You can search for the count of [u]any[/u] ThingDef (items, ostriches, doors, rocks...) on the map. Anything that is forbidden will not be counted.
This also take into account your bill's options. Set it to "normal and above" quality only? You won't be seeing any low tier [i]trash[/i] in your count! "hitpoints" and "tainted" work, and stockpile are being worked on.

To search a ThingDef you need to convert the in-game name, make it lowercase, and wrap it in speech marks.
Item quality, material and stack count should also be omitted from the name.
If it has speech marks in its name, replace them with an underscore: _
Singular words like ostrich don't always need speechmarks - it's up to you.

Let's look at some examples:
Compacted steel -> "compacted steel"
Medicine x5 -> "medicine"
Go-juice -> "go-juice"
Uranium mace (legendary) -> mace

[b]Category searching[/b]
You can search categories of items the same way you'd search ThingDefs, except you pretend the category with "c ", "cat " or "category "
Here are some examples:
Humanlike corpses -> "category humanlike corpses"
Meals -> "c meals"
Eggs (unfert.) -> "cat eggs (unfert.)"

[h2]Future updates[/h2]
[b]Math![/b] is far from done, and I have many QOL updates planned. Some of the most interesting are:
UI improvements from Better Workbench Management. As BWM has been left for over a year, I'm going to be taking over what it started by combining its improves with my own. In the future I might rename this mod to better reflect that.
Custom user variables, letting you simplify equations or store results.
Expandable text field to allow as much room as you'll need.
Searching any attribute of a thing, such as its market value, weight, if it's male or female, etc.

[h2]Compatibility[/h2]
You can add this to a new save, and you can also remove it from a save. You will get an error the first time you do so, but it shouldn't break your game.
Things from other mods like new foods or weapons will work with this mod.
If a mod changes the UI of the bill menu, it likely won't work with this mod.
Better Workbench Management doesn't play nicely with this mod, and I'm gradually integrating its functionality into this mod anyways.
Everybody Gets One doesn't seem to work.

[b]Links:[/b]
Discord with me and my budderoos: https://discord.gg/hUnEs9ZhwA
Github: https://github.com/CrunchyDuck/Math
NCalc: https://github.com/ncalc/ncalc
donate: I will keep doing what I do regardless of income. https://ko-fi.com/crunchyduck

[b]Credits:[/b]
falconne, who made [url=https://steamcommunity.com/sharedfiles/filedetails/?id=935982361]Better Workbench Management[/url] and its assets.

[img]https://raw.githubusercontent.com/CrunchyDuck/Math/master/About/licence_image.png[/img]</description>
	<modDependencies>
		<li>
			<packageId>brrainz.harmony</packageId>
			<displayName>Harmony</displayName>
			<steamWorkshopUrl>steam://url/CommunityFilePage/2009463077</steamWorkshopUrl>
			<downloadUrl>https://github.com/pardeike/HarmonyRimWorld/releases/latest</downloadUrl>
		</li>
	</modDependencies>
	<loadAfter>
		<li>Ludeon.RimWorld</li>
		<li>brrainz.harmony</li>
	</loadAfter>
	<incompatibleWith>
	  <li>falconne.BWM</li>
	</incompatibleWith>
</ModMetaData>
