<?xml version="1.0" encoding="utf-8" ?>
<LanguageData>
	<!-- General tooltips -->
	<CD.M.tooltips.user_variables>User variables</CD.M.tooltips.user_variables>
	<CD.M.tooltips.make_link>Link this bill to the currently copied bill.</CD.M.tooltips.make_link>
	<CD.M.tooltips.break_link>Break this bill's link with its parent.</CD.M.tooltips.break_link>
	<CD.M.tooltips.link_suspended>Link this bill's "suspended" status to its parent.</CD.M.tooltips.link_suspended>
	<CD.M.tooltips.link_input_fields>Link this bill's inputs to its parent.</CD.M.tooltips.link_input_fields>
	<CD.M.tooltips.link_repeat_mode>Link this bill's repeat mode to its parent.</CD.M.tooltips.link_repeat_mode>
	<CD.M.tooltips.link_repeat_mode_incompatible>This bill's repeat modes are not compatible with its parent (Normally means one can't have "Do until you have X").</CD.M.tooltips.link_repeat_mode_incompatible>
	<CD.M.tooltips.link_ingredients>Link this bill's ingredients to its parent.</CD.M.tooltips.link_ingredients>
	<CD.M.tooltips.link_ingredients_incompatible>This bill's available ingredients do not match its parents'.</CD.M.tooltips.link_ingredients_incompatible>
	
	<!-- Link settings -->
	<CD.M.link.name>Name</CD.M.link.name>
	<CD.M.link.name.description>Link this bill's name to its parent.</CD.M.link.name.description>
	<CD.M.link.input_fields>Link input fields</CD.M.link.input_fields>
	<CD.M.link.input_fields.description>Link this bill's input fields to its parent.</CD.M.link.input_fields.description>
	<CD.M.link.target_count>Target count</CD.M.link.target_count>
	<CD.M.link.target_count.description>Link this bill's "Target count" field to its parent.</CD.M.link.target_count.description>
	<CD.M.link.custom_item_count>Custom item count</CD.M.link.custom_item_count>
	<CD.M.link.custom_item_count.description>Link this bill's "Custom item count" checkbox and field to its parent.</CD.M.link.custom_item_count.description>
	<CD.M.link.pause>Pause</CD.M.link.pause>
	<CD.M.link.pause.description>Link this bill's "Pause when satisfied" checkbox and field to its parent.</CD.M.link.pause.description>
	<CD.M.link.middle_panel>Middle panel</CD.M.link.middle_panel>
	<CD.M.link.middle_panel.description>All of the settings in the middle of this window. I couldn't think of a better name, sorry.</CD.M.link.middle_panel.description>
	<CD.M.link.repeat_mode>Repeat mode</CD.M.link.repeat_mode>
	<CD.M.link.repeat_mode.description>Link this bill's repeat mode (such as "Do X times") to its parent's.</CD.M.link.repeat_mode.description>
	<CD.M.link.repeat_mode_incompatible>This bill's repeat modes are not compatible with its parent (Normally means one can't have "Do until you have X").</CD.M.link.repeat_mode_incompatible>
	<CD.M.link.tainted>Tainted</CD.M.link.tainted>
	<CD.M.link.equipped>Equipped</CD.M.link.equipped>
	<CD.M.link.only_allowed_ingredients>Only allowed ingredients</CD.M.link.only_allowed_ingredients>
	<CD.M.link.check_stockpile>Stockpile to check</CD.M.link.check_stockpile>
	<CD.M.link.hp>Hitpoints filter</CD.M.link.hp>
	<CD.M.link.quality>Quality filter</CD.M.link.quality>
	<CD.M.link.target_stockpile>Take to stockpile</CD.M.link.target_stockpile>
	<CD.M.link.target_stockpile_incompatible>This bill produces a different thing to its parent, and can't be taken to the same stockpiles.</CD.M.link.target_stockpile_incompatible>
	<CD.M.link.workers>Workers</CD.M.link.workers>
	<CD.M.link.workers_incompatible>This bill has different allowed worktypes to its parent.</CD.M.link.workers_incompatible>
	<CD.M.link.cat_ingredients>Link ingredients</CD.M.link.cat_ingredients>
	<CD.M.link.ingredients>Ingredients</CD.M.link.ingredients>
	<CD.M.link.ingredients_incompatible>This bill's available ingredients do not match its parents'.</CD.M.link.ingredients_incompatible>
	<CD.M.link.ingredients_radius>Ingredients radius</CD.M.link.ingredients_radius>
	
	<!-- Update logs -->
	<CD.M.updates.1.3>User variables:
You can now create and save equations as variables! You type out an equation, give it a name, and then you can reuse that anywhere you want! More info can be found in the infocard at "Basic.Making a custom variable".
User variables are remembered between saves, so once you type it out, you have it for as long as you want it. This can cut down on long equations quite a bit, allow for more complicated usage without becoming unwieldy, and reduce the amount of copying and pasting done.

Future plans:
Speaking of copying and pasting, that's next on the agenda: I'm working on an improvement to Better Workbench Management's Linking system. I'm really excited to get this done, expect it in the near future.
I also want to make my mod compatible with Compositable Loadouts. It's been requested a few times, and it looks like a good mod.

Minor changes:
Added this window! I wanted to find a way to inform people on what's updated, but I don't like shoving something in someone's face the moment they start up the game.
Added "mechanoids" pawn group, and stopped mechanoids being counted in "pawns"
Added a close button to the infocard, at weirdly high request.
Ingredient radius now properly renders.
</CD.M.updates.1.3>
	
	<!-- Info card -->
	<CD.M.infocard.introduction.description>This menu provides a reference for the Math! mod, its functions and variables, and some examples of what you can do with them.
	
Each tab covers a different usage of Math!. This tab covers fundamental or general information.

Click on a row to get an explanation.</CD.M.infocard.introduction.description>

	<!-- Info card tutorials -->
	<CD.M.infocard.basic.tutorials.variable_names>Variable names</CD.M.infocard.basic.tutorials.variable_names>
	<CD.M.infocard.basic.tutorials.variable_names.description>You can use variables in your equations, like how many colonists you have, how many of an item you have, or how many of a category of items you have.

To do any of this, you need to convert the name of what you want to search, like "Uranium mace (legendary)", into a variable. It's simple to do!
First, make it lowercase, and wrap it in speech marks.
Item quality, material and stack count should also be omitted from the name.
If it has speech marks or full stops in its name, replace them with an underscore: _
Singular words like ostrich don't always need speechmarks - it's up to you.

Let's look at some examples:
Medicine x5 -> "medicine"
Go-juice -> "go-juice"
Uranium mace (legendary) -> mace</CD.M.infocard.basic.tutorials.variable_names.description>
	<CD.M.infocard.basic.tutorials.itemcount>Using "Custom item count"</CD.M.infocard.basic.tutorials.itemcount>
	<CD.M.infocard.basic.tutorials.itemcount.description>You'll notice that there's a new checkbox on "Do until you have X" bills called "Custom item count".
Turning this on, you can customize what the recipe counts to check how much of something it has.
For example, if you type in "category meals", it will count "simple meal", "fine meal", "packaged survival meal", etc.

Leaving "Custom item count" off will use the default counting logic.</CD.M.infocard.basic.tutorials.itemcount.description>
	<CD.M.infocard.basic.tutorials.user_variables>Making a custom variable</CD.M.infocard.basic.tutorials.user_variables>
	<CD.M.infocard.basic.tutorials.user_variables.description>In bill menus there's a new button in the top left that looks like "{x}". Clicking on this will open up a new window that allows you to name and assign equations!
User variables are remembered between save files, so you can reuse them wherever you like!

Once you've created a variable, you can use it in any input field by typing "variables.name" or "v.name", where "name" is what you called your variable.
For example, you might have the following variable:
meals = "c.meals" - "packaged survival meal"
You could then use this variable in an input field by typing:
"v.meals"

Variables work by directly pasting what you typed into the place of your variable, and surrounding it with brackets. For example:
"v.meals" * 2 -> ("c.meals" - "packaged survival meal") * 2

A variable should be named the same way parameters are - lowercase, no . or " in the name.</CD.M.infocard.basic.tutorials.user_variables.description>

	<CD.M.infocard.basic.tutorials.doXTimes>Equations in "Do X Times" bills</CD.M.infocard.basic.tutorials.doXTimes>
	<CD.M.infocard.basic.tutorials.doXTimes.description>Any equations you put into "Do X Times" will be resolved down into a number, rather than remembered like in "Do Until X".
	
This is done so you can make one-time calculations in the field, like colonists * 3, without the bill running forever.</CD.M.infocard.basic.tutorials.doXTimes.description>
	
	<CD.M.infocard.basic.examples.pawns>"colonists" * 2</CD.M.infocard.basic.examples.pawns>
	<CD.M.infocard.basic.examples.pawns.description>Get the number of colonists you have, times two. Useful for things like clothing or weapon production.</CD.M.infocard.basic.examples.pawns.description>
	<CD.M.infocard.basic.examples.intake>"pawns.intake" * 5</CD.M.infocard.basic.examples.intake>
	<CD.M.infocard.basic.examples.intake.description>The amount of nutritional intake all pawns in your colony need for 5 days. Meals have 0.9 nutrition, so this is rough estimate for how many meals you need.</CD.M.infocard.basic.examples.intake.description>
	<CD.M.infocard.basic.examples.meals>"categories.meals"</CD.M.infocard.basic.examples.meals>
	<CD.M.infocard.basic.examples.meals.description>How many meals your colony has - simple, fine, luxury, packaged... Useful in the "Custom item count" field.</CD.M.infocard.basic.examples.meals.description>

	
	<CD.M.tutorial.searching.things>Searching Things</CD.M.tutorial.searching.things>
	<CD.M.tutorial.searching.things.description>You can search any Thing in the game such as "slate blocks", ostriches, "compacted steel", etc.
The count you get back will not include forbidden items, and will take into account the recipe's settings. E.G. if an item has 40% hitpoints but recipe requires 50%, it won't be counted.

To search a ThingDef you need to convert the in-game name, make it lowercase, and wrap it in speech marks.
Item quality, material and stack count should also be omitted from the name.
If it has speech marks or full stops in its name, replace them with an underscore: _
Singular words like ostrich don't always need speechmarks - it's up to you.

Let's look at some examples:
Compacted steel -> "compacted steel"
Medicine x5 -> "medicine"
Go-juice -> "go-juice"
Uranium mace (legendary) -> mace</CD.M.tutorial.searching.things.description>

	<CD.M.tutorial.searching.stats>Searching Thing Stats</CD.M.tutorial.searching.stats>
	<CD.M.tutorial.searching.stats.description>Things have stats like "market value", "nutrition", "mech bandwidth". This mod supports two types of stat searching.

The first type lets you search the stat of a Thing's prefab. This value is always the same, it doesn't depend on how many of that item you have or the quality of those items - It's the value those items normally have.

The second type lets you search the stats of individual items you own. This search is performed by putting "owned", "own" or "o" before the name of the StatDef.

Some examples of both:
"kibble.nutrition" will give you 0.05, the nutritional value of one piece of kibble.
"kibble.owned nutrition" will give you the total nutrition you have in stored kibble.

This also works on categories, and will add up the result from every item in that category.
"category meals.o nutrition" will return how much nutrition you have in stored meals.
"category meals.nutrition" is pretty useless, but shows it's possible.</CD.M.tutorial.searching.stats.description>

	<CD.M.tutorial.searching.categories>Searching categories</CD.M.tutorial.searching.categories>
	<CD.M.tutorial.searching.categories.description>You can search any category of things in game, such as "category raw food", "cat textiles", "c meals", etc. Categories can be seen in any stockpile or bill menu.

Categories are written just like Things, except you start the variable with the word "category"", or "cat", or simply "c".
Here are some examples:
Humanlike corpses -> "category humanlike corpses"
Meals -> "c meals"
Eggs (unfert.) -> "cat eggs (unfert_)"</CD.M.tutorial.searching.categories.description>

	<CD.M.tutorial.searching.traits>Searching traits</CD.M.tutorial.searching.traits>
	<CD.M.tutorial.searching.traits.description>You can search any trait on any pawn group, such as "pawns.traits.jogger", "colonists.traits.nudist", "colonists.traits.gay"</CD.M.tutorial.searching.traits.description>

	<!-- Pawn groups -->
	<CD.M.pawn.group.pawns.description>Alias: pwn
Number of owned pawns on the map the bill is contained in.</CD.M.pawn.group.pawns.description>

	<CD.M.pawn.group.colonists.description>Alias: col
Number of colonists on the map the bill is contained in. Does not include prisoners, slaves or guests.</CD.M.pawn.group.colonists.description>
	
	<CD.M.pawn.group.mechanitors.description>Alias: mech
Number of owned mechanitors on the map the bill is contained in. Doesn't include slaves or prisoners</CD.M.pawn.group.mechanitors.description>

	<CD.M.pawn.group.slaves.description>Alias: slv
Number of owned slaves on the map the bill is contained in.</CD.M.pawn.group.slaves.description>

	<CD.M.pawn.group.prisoners.description>Alias: pri
Number of owned prisoners on the map the bill is contained in.</CD.M.pawn.group.prisoners.description>

	<CD.M.pawn.group.guests.description>Number of lodgers or guests staying with you as a result of quests.</CD.M.pawn.group.guests.description>

	<CD.M.pawn.group.animals.description>Alias: anim
Number of owned animals on the map the bill is contained in.</CD.M.pawn.group.animals.description>

	<CD.M.pawn.group.babies.description>Alias: bab
Number of owned babies on the map the bill is contained in.</CD.M.pawn.group.babies.description>

	<CD.M.pawn.group.kids.description>Alias: kid
Number of owned children on the map the bill is contained in.</CD.M.pawn.group.kids.description>

	<!-- Statdefs info card tab. -->
	<CD.M.infocard.statdefs.description>Here you can see all StatDefs in the game.

Click on a row to get an explanation.</CD.M.infocard.statdefs.description>

	<CD.M.infocard.statdefs.examples.pawn>"animals.intake"</CD.M.infocard.statdefs.examples.pawn>
	<CD.M.infocard.statdefs.examples.pawn.description>The total nutritional intake of all animals you own.</CD.M.infocard.statdefs.examples.pawn.description>
	<CD.M.infocard.statdefs.examples.nutrition>"prefab.kibble.nutrition"</CD.M.infocard.statdefs.examples.nutrition>
	<CD.M.infocard.statdefs.examples.nutrition.description>How much nutrition a normal piece of kibble has.</CD.M.infocard.statdefs.examples.nutrition.description>
	
	
	<!-- Special stat counters -->
	<CD.M.counters.male.description>Whether a pawn is male.</CD.M.counters.male.description>
	<CD.M.counters.female.description>Whether a pawn is female.</CD.M.counters.female.description>
	<CD.M.counters.intake.description>How much food a pawn requires per day.</CD.M.counters.intake.description>
	<CD.M.counters.bandwidth.description>How much bandwidth a pawn has.</CD.M.counters.bandwidth.description>
	<CD.M.counters.stack.limit.description>The maximum amount of this item that can be stacked.</CD.M.counters.stack.limit.description>

	<!-- Pawn info card tab -->
	<CD.M.infocard.pawns>Pawns</CD.M.infocard.pawns>
	<CD.M.infocard.pawns.description>You can search groups of pawns (pawn groups), or individual pawns. Pawns have stats that other things don't, like gender, or bandwidth.</CD.M.infocard.pawns.description>

	<CD.M.infocard.pawns.tutorials.searching_pawns>Searching pawns</CD.M.infocard.pawns.tutorials.searching_pawns>
	<CD.M.infocard.pawns.tutorials.searching_pawns.description>You can search the nickname of any pawn in your colony. For example: "john"</CD.M.infocard.pawns.tutorials.searching_pawns.description>
	<CD.M.infocard.pawns.tutorials.searching_pawn_stats>Searching pawn stats</CD.M.infocard.pawns.tutorials.searching_pawn_stats>
	<CD.M.infocard.pawns.tutorials.searching_pawn_stats.description>You can search any StatDef on a pawn like you can any other thing, such as "prisoners.market value".
	
Pawns have access to special stats that other things don't, like "colonists.male". They can all be see in the StatDefs tab.</CD.M.infocard.pawns.tutorials.searching_pawn_stats.description>
	<CD.M.infocard.pawns.tutorials.searching_pawn_traits>Searching pawn traits</CD.M.infocard.pawns.tutorials.searching_pawn_traits>
	<CD.M.infocard.pawns.tutorials.searching_pawn_traits.description>You can search which traits pawns or pawn groups have, for example: "colonists.fast walker", "colonists.gay"
	
The full list of traits can be seen at the bottom of this tab.</CD.M.infocard.pawns.tutorials.searching_pawn_traits.description>
	<CD.M.infocard.pawns.tutorials.filtering>Filtering pawn groups</CD.M.infocard.pawns.tutorials.filtering>
	<CD.M.infocard.pawns.tutorials.filtering.description>You can chain pawn groups together to filter them down. For example, "prisoners.mechanitors" will get all of the mechanitors you have imprisoned.</CD.M.infocard.pawns.tutorials.filtering.description>

	<CD.M.infocard.pawns.examples.pawngroup>"colonists" * 2</CD.M.infocard.pawns.examples.pawngroup>
	<CD.M.infocard.pawns.examples.pawngroup.description>If you have 4 colonists, "colonists" * 2 would return 8.</CD.M.infocard.pawns.examples.pawngroup.description>
	<CD.M.infocard.pawns.examples.individual_pawn>"john.meat amount"</CD.M.infocard.pawns.examples.individual_pawn>
	<CD.M.infocard.pawns.examples.individual_pawn.description>How much MEAT would JOHN give if we CUT HIM UP</CD.M.infocard.pawns.examples.individual_pawn.description>
	<CD.M.infocard.pawns.examples.trait_searching>"colonists" - "colonists.traits.nudist"</CD.M.infocard.pawns.examples.trait_searching>
	<CD.M.infocard.pawns.examples.trait_searching.description>Counts how many colonists you have that aren't nudists. Useful for clothing production.</CD.M.infocard.pawns.examples.trait_searching.description>
	<CD.M.infocard.pawns.examples.pawngroup_filtering>"colonists.mechanitors"</CD.M.infocard.pawns.examples.pawngroup_filtering>
	<CD.M.infocard.pawns.examples.pawngroup_filtering.description>How many colonists in our colony are mechanitors?</CD.M.infocard.pawns.examples.pawngroup_filtering.description>
	
	<CD.M.infocard.pawns.animals.description>A player-owned tamed animal.</CD.M.infocard.pawns.animals.description>
	<CD.M.infocard.pawns.pawns.description>A non-animal non-robot pawn that belong to your colony - Colonists, guests, slaves, prisoners.</CD.M.infocard.pawns.pawns.description>
	<CD.M.infocard.pawns.mechanoids.description>A mechanoid is a tiny robot friend that is owned by your colony.</CD.M.infocard.pawns.mechanoids.description>
	<CD.M.infocard.pawns.colonists.description>A colonist is someone who isn't a slave or a guest or prisoner or an animal or a mechanoid. You have full ownership over them.</CD.M.infocard.pawns.colonists.description>
	<CD.M.infocard.pawns.guests.description>A guest includes people who stay with you temporarily as part of a quest, and visitors in mod Hospitality.</CD.M.infocard.pawns.guests.description>
	<CD.M.infocard.pawns.prisoners.description>A player-owned prisoner.</CD.M.infocard.pawns.prisoners.description>
	<CD.M.infocard.pawns.slaves.description>A player-owned slave.</CD.M.infocard.pawns.slaves.description>
	<CD.M.infocard.pawns.babies.description>A player-owned newborn or baby.</CD.M.infocard.pawns.babies.description>
	<CD.M.infocard.pawns.kids.description>A player-owned child.</CD.M.infocard.pawns.kids.description>
	<CD.M.infocard.pawns.mechanitors.description>A player-owned mechanitor.</CD.M.infocard.pawns.mechanitors.description>
	
	<!-- Category infocard tab -->
	<CD.M.infocard.categories>Categories</CD.M.infocard.categories>
	<CD.M.infocard.categories.description>You can search any category of things in game, such as "categories.raw food", "categories.textiles", "c.meals", etc. Categories can be seen in any stockpile or bill menu.</CD.M.infocard.categories.description>
	
</LanguageData>